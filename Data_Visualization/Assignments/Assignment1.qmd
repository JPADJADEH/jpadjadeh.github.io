---
<<<<<<< HEAD
title: "Assignment 1: Data Visualization"
author: "Your Name"
date: "September 26, 2025"
format: html
---

## 1. Analyzing Anscombe’s Plots

Anscombe’s Quartet teaches us that data can look the same in numbers but tell very different stories when you make a graph. All four datasets have the same averages, correlations, and regression lines, but the plots show one is a straight line, another is curved, and others are shaped by outliers.

Lesson: If we only look at numbers, we may miss hidden patterns and draw wrong conclusions.

Always graph the data before and after running models. Simple plots like scatterplots can reveal issues such as:
- Outliers
- Non-linear trends
- Unusual points

### Anscombe Plots Code and Output

Here’s the code to generate the Anscombe Quartet plots.

```{r anscombe-plots, echo=TRUE, eval=TRUE, fig.show='hold', fig.cap="Anscombe's Quartet"}
# Load data
data(anscombe)

# Create models
ff <- y ~ x
mods <- setNames(as.list(1:4), paste0("lm", 1:4))

for(i in 1:4) {
  ff[2:3] <- lapply(paste0(c("y","x"), i), as.name)
  mods[[i]] <- lmi <- lm(ff, data = anscombe)
}

# Prepare plot layout
op <- par(mfrow = c(2, 2), mar = 0.1 + c(4,4,1,1), oma = c(0, 0, 2, 0))

# Plot each dataset
for(i in 1:4) {
=======
title: "Assignment 1"
format: html
page-layout: article
toc: true
---
## Q1. Analyzing Anscombe’s Plots

Anscombe’s Quartet shows that datasets can share nearly identical summary statistics (means, variances, correlations, and regression lines) yet have very different relationships when graphed. One series is roughly linear with noise, another is clearly non-linear (curved), another is driven by an outlier, and the last has vertical clustering forced by a high-leverage point.

**Why this matters:** Relying only on summary numbers can be misleading.  
**Best practice:** Always visualize the data (e.g., scatterplots) before and after modeling to catch:  
- Outliers / high-leverage points  
- Non-linear patterns  
- Heterogeneity or clusters
```{r anscombe-plots, fig.width=6, fig.height=6}
# Load dataset
data(anscombe)

# Build formulas and fit models
ff <- y ~ x
mods <- setNames(vector("list", 4), paste0("lm", 1:4))
for (i in 1:4) {
  ff[2:3] <- lapply(paste0(c("y","x"), i), as.name)
  mods[[i]] <- lm(ff, data = anscombe)
}

# Panel layout and margins
op <- par(mfrow = c(2, 2), mar = 0.1+c(4,4,1,1), oma = c(0, 0, 2, 0))

# Plot 4 panels with regression lines
for (i in 1:4) {
>>>>>>> gh-pages
  ff[2:3] <- lapply(paste0(c("y","x"), i), as.name)
  plot(ff, data = anscombe, col = "red", pch = 21, bg = "orange", cex = 1.2,
       xlim = c(3, 19), ylim = c(3, 13))
  abline(mods[[i]], col = "blue")
}
<<<<<<< HEAD
mtext("Anscombe's 4 Regression Data Sets", outer = TRUE, cex = 1.5)
par(op)
=======

mtext("Anscombe's 4 Regression Data Sets", outer = TRUE, cex = 1.3)
par(op)
```

---

## Q1. Analyzing Anscombe’s Plots

Anscombe’s Quartet shows that datasets can share nearly identical summary statistics (means, variances, correlations, and regression lines) yet have very different relationships when graphed. One series is roughly linear with noise, another is clearly non-linear (curved), another is driven by an outlier, and the last has vertical clustering forced by a high-leverage point.

**Why this matters:** Relying only on summary numbers can be misleading.\
**Best practice:** Always visualize the data (e.g., scatterplots) before and after modeling to catch outliers/high-leverage points, non-linear patterns, and clusters.

\`\`\`{r setup, include=FALSE} knitr::opts_chunk\$set(echo = FALSE, message = FALSE, warning = FALSE)
>>>>>>> gh-pages
