---
title: "Assignment 2: Paul Murrell's R Graphics Functions"
author: "JP ADJADEH"
date: "September 28, 2025"
format: html
---

## Assignment Overview

This assignment explores Paul Murrell's basic R graphics functions through two parts: first running his examples with my own modifications, then applying the knowledge to analyze Happy Planet Index data.

## Question 1: Running Murrell's Examples with Modifications

I started by working through Paul Murrell's original R graphics code, making modifications to understand how each function works.

### My Dataset Modifications

```{r}
#| label: murrell-modifications
#| include: false

# My modified data for Murrell's examples
study_hours <- c(1, 2, 4, 6, 8, 10, 12, 14, 16, 18)
exam_scores <- c(45, 52, 65, 74, 80, 84, 87, 89, 91, 93)

# Climate data modification
months <- c(1, 2, 3, 4, 5, 6)
temperature <- c(2.1, 4.5, 8.2, 12.6, 16.8, 21.3)
rainfall <- c(8.5, 7.2, 6.1, 4.8, 3.2, 2.1)
```

```{r}
#| label: murrell-plots
#| fig-width: 12
#| fig-height: 10
#| fig-cap: "Modified Murrell examples with my own datasets"

# Basic plot with my study data
plot(study_hours, exam_scores, pch=18)
text(10, 70, "Exam Scores\nversus\nStudy Hours")

# Setting the parameter (3 rows by 2 cols)
par(mfrow=c(3, 2))

# Scatterplot with climate data
x <- months
y1 <- temperature
y2 <- rainfall

par(las=1, mar=c(4, 4, 3, 4), cex=.7) 
plot.new()
plot.window(range(x), c(0, 25))
lines(x, y1)
lines(x, y2)
points(x, y1, pch=16, cex=1.5)
points(x, y2, pch=21, bg="lightblue", cex=2)
par(col="darkblue", fg="darkblue", col.axis="darkblue")
axis(1, at=seq(1, 6, 1)) # The first number (1) specifies bottom axis
axis(2, at=seq(0, 25, 5))
axis(4, at=seq(0, 10, 2))
box(bty="u")
mtext("Month", side=1, line=2, cex=0.8)
mtext("Temperature (Â°C)", side=2, line=2, las=0, cex=0.8)
mtext("Rainfall (mm)", side=4, line=2, las=0, cex=0.8)
text(3, 22, "Climate Data")
par(mar=c(5.1, 4.1, 4.1, 2.1), col="black", fg="black", col.axis="black")

# Histogram with modified colors
Y <- rnorm(50)
Y[Y < -3.5 | Y > 3.5] <- NA
x <- seq(-3.5, 3.5, .1)
par(mar=c(4.5, 4.1, 3.1, 0))
hist(Y, breaks=seq(-3.5, 3.5), ylim=c(0, 0.5), 
     col="orange", freq=FALSE)
lines(x, dnorm(x), lwd=3, col="darkred")
par(mar=c(5.1, 4.1, 4.1, 2.1))

# Barplot with neutral colors
par(mar=c(2, 3.1, 2, 2.1)) 
midpts <- barplot(VADeaths, 
                  col=c("wheat", "tan", "burlywood", "rosybrown", "bisque"),
                  names=rep("", 4))
mtext(sub(" ", "\n", colnames(VADeaths)),
      at=midpts, side=1, line=0.5, cex=0.5)
text(rep(midpts, each=5), apply(VADeaths, 2, cumsum) - VADeaths/2,
     VADeaths, 
     col=rep(c("white", "black"), times=3:2), 
     cex=0.8)
par(mar=c(5.1, 4.1, 4.1, 2.1))

# Boxplot (kept original ToothGrowth data)
par(mar=c(3, 4.1, 2, 0))
boxplot(len ~ dose, data = ToothGrowth,
        boxwex = 0.25, at = 1:3 - 0.2,
        subset= supp == "VC", col="white",
        xlab="", ylab="tooth length", ylim=c(0,35))
mtext("Vitamin C dose (mg)", side=1, line=2.5, cex=0.8)
boxplot(len ~ dose, data = ToothGrowth, add = TRUE,
        boxwex = 0.25, at = 1:3 + 0.2,
        subset= supp == "OJ")
legend(1.5, 9, c("Ascorbic acid", "Orange juice"), 
       fill = c("white", "gray"), bty="n")
par(mar=c(5.1, 4.1, 4.1, 2.1))

# 3D perspective plot (kept original)
x <- seq(-10, 10, length= 30)
y <- x
f <- function(x,y) { r <- sqrt(x^2+y^2); 10 * sin(r)/r }
z <- outer(x, y, f)
z[is.na(z)] <- 1
par(mar=c(0, 0.5, 0, 0), lwd=0.5)
persp(x, y, z, theta = 30, phi = 30, expand = 0.5)
par(mar=c(5.1, 4.1, 4.1, 2.1), lwd=1)

# Reset plotting parameters
par(mfrow=c(1, 1))
```

## Question 2: Happy Planet Index Application

After understanding Murrell's functions, I applied this knowledge to analyze Happy Planet Index data from [http://happyplanetindex.org](http://happyplanetindex.org).

### HPI Data Source

I downloaded the 2024 HPI dataset and focused on the top 5 performing countries:
- Vanuatu (HPI: 57.9)
- Sweden (HPI: 55.9) 
- El Salvador (HPI: 54.7)
- Costa Rica (HPI: 54.1)
- Nicaragua (HPI: 53.6)

```{r}
#| label: hpi-setup
#| include: false

# HPI data - Top 5 countries from actual dataset
countries <- c("Vanuatu", "Sweden", "El Salvador", "Costa Rica", "Nicaragua")
hpi_scores <- c(57.9, 55.9, 54.7, 54.1, 53.6)
life_expectancy <- c(70.4, 82.5, 70.7, 79.6, 73.8)
```

```{r}
#| label: hpi-analysis
#| fig-width: 12
#| fig-height: 10
#| fig-cap: "Paul Murrell's plotting functions applied to Happy Planet Index data"

# Basic relationship plot
plot(hpi_scores, life_expectancy, pch=18)
text(55, 75, "Life Expectancy\nversus\nHPI Score")

# Comprehensive HPI analysis using Murrell's functions
par(mfrow=c(3, 2))

# Scatterplot with dual y-axes
x <- c(1, 2, 3, 4, 5)  # Country rankings
y1 <- c(57.9, 55.9, 54.7, 54.1, 53.6)  # HPI scores
y2 <- c(70.4, 82.5, 70.7, 79.6, 73.8)  # Life expectancy

par(las=1, mar=c(4, 4, 3, 4), cex=.7) 
plot.new()
plot.window(range(x), c(50, 85))
lines(x, y1)
lines(x, y2)
points(x, y1, pch=16, cex=1.5)
points(x, y2, pch=21, bg="lightgreen", cex=1.5)
par(col="darkgreen", fg="darkgreen", col.axis="darkgreen")
axis(1, at=1:5, labels=c("VUT", "SWE", "SLV", "CRI", "NIC"))
axis(2, at=seq(50, 60, 5))
axis(4, at=seq(70, 85, 5))
box(bty="u")
mtext("Countries (Top 5 HPI)", side=1, line=2, cex=0.8)
mtext("HPI Score", side=2, line=2, las=0, cex=0.8)
mtext("Life Expectancy", side=4, line=2, las=0, cex=0.8)
text(3, 80, "HPI Data")
par(mar=c(5.1, 4.1, 4.1, 2.1), col="black", fg="black", col.axis="black")

# Histogram of HPI scores
hpi_sample <- c(57.9, 55.9, 54.7, 54.1, 53.6, 53.0, 52.0, 51.3, 50.9, 50.8)
par(mar=c(4.5, 4.1, 3.1, 0))
hist(hpi_sample, breaks=seq(50, 60, 2), ylim=c(0, 4), 
     col="lightblue", freq=TRUE, main="HPI Distribution")
par(mar=c(5.1, 4.1, 4.1, 2.1))

# Barplot with HPI theme colors
par(mar=c(2, 3.1, 2, 2.1)) 
midpts <- barplot(VADeaths, 
                  col=c("#F5F5DC", "#DEB887", "#D2B48C", "#BC8F8F", "#F5DEB3"),
                  names=rep("", 4))
mtext(sub(" ", "\n", colnames(VADeaths)),
      at=midpts, side=1, line=0.5, cex=0.5)
text(rep(midpts, each=5), apply(VADeaths, 2, cumsum) - VADeaths/2,
     VADeaths, 
     col=rep(c("white", "black"), times=3:2), 
     cex=0.8)
par(mar=c(5.1, 4.1, 4.1, 2.1))

# Boxplot by region
hpi_data <- data.frame(
  region = rep(c("Europe", "Americas", "Oceania"), c(3, 2, 1)),
  hpi = c(55.9, 53.0, 49.8, 54.7, 54.1, 57.9)
)
par(mar=c(3, 4.1, 2, 0))
boxplot(hpi ~ region, data = hpi_data,
        col=c("lightblue", "lightcoral", "lightgreen"),
        xlab="", ylab="HPI Score", ylim=c(45, 60))
mtext("Region", side=1, line=2.5, cex=0.8)
par(mar=c(5.1, 4.1, 4.1, 2.1))

# 3D surface (demonstrating persp function)
x <- seq(-10, 10, length= 30)
y <- x
f <- function(x,y) { r <- sqrt(x^2+y^2); 10 * sin(r)/r }
z <- outer(x, y, f)
z[is.na(z)] <- 1
par(mar=c(0, 0.5, 0, 0), lwd=0.5)
persp(x, y, z, theta = 30, phi = 30, expand = 0.5)
par(mar=c(5.1, 4.1, 4.1, 2.1), lwd=1)

# Pie chart of top 5 HPI countries
par(mar=c(0, 2, 1, 2), xpd=FALSE, cex=0.5)
pie(hpi_scores, labels = countries, 
    col = c("green", "blue", "orange", "darkred", "lightcoral"))

# Reset plotting parameters
par(mfrow=c(1, 1))
```

## Key Functions Learned

### Understanding `axis()` Function Parameters

The first parameter in `axis(1, at=seq(1, 5, 1))` specifies which side of the plot to draw the axis:
- `1` = bottom axis (x-axis)
- `2` = left axis (y-axis) 
- `3` = top axis
- `4` = right axis

This understanding allowed me to create dual y-axis plots showing both HPI scores and life expectancy.

### Functions Mastered

- **`par()`** - Control plotting parameters and layout
- **`lines()`** - Connect data points with line segments
- **`points()`** - Add customizable data points
- **`axis()`** - Create custom axes on any side
- **`box()`** - Add borders and frames
- **`text()` & `mtext()`** - Place labels and titles
- **`hist()`** - Generate histograms with custom styling
- **`boxplot()`** - Compare distributions across groups
- **`persp()`** - Create 3D perspective visualizations
- **`pie()`** - Show proportional relationships

## What I Learned

Working through Murrell's approach taught me the power of low-level graphics functions. Rather than relying on high-level packages, these functions provide precise control over every visual element. The progression from basic `plot()` to complex multi-panel displays using `par(mfrow)` showed how professional graphics are built incrementally.

Applying these techniques to real Happy Planet Index data revealed meaningful patterns between countries' happiness, life expectancy, and environmental sustainability. The systematic approach of modifying Murrell's examples first, then applying the knowledge to new data, reinforced my understanding of each function's purpose and capabilities.
---
