---
title: "Assignment 2: Google Trends Analysis"
author: "Your Name"
format: 
  html:
    code-fold: true
    code-summary: "Show code"
    toc: true
    toc-location: left
execute:
  warning: false
  message: false
---

# Google Trends: Trump, Harris, Election

## Data Analysis

```{r setup}
#| echo: true
#| output: false

# Load required packages
library(gtrendsR)
library(readr)
library(dplyr)
library(stringr)

# Import and process the CSV data
# Since the CSV is in the same folder as this .qmd file, use relative path
df_raw <- read_csv("multiTimeline.csv", skip = 2, show_col_types = FALSE)

df <- df_raw %>%
  rename(
    week     = Week,
    trump    = `Donald Trump: (United States)`,
    harris   = `Kamala Harris: (United States)`,
    election = `election: (United States)`
  ) %>%
  # Convert "<1" to 0.5, then to numeric
  mutate(across(-week, ~ as.numeric(str_replace(.x, "<1", "0.5")))) %>%
  mutate(week = as.Date(week))

# Display data structure (output hidden)
glimpse(df)
head(df)
```

## Visualization

```{r plot}
#| echo: true
#| fig-width: 10
#| fig-height: 6

# Create the plot
plot(df$week, df$trump, type = "l", col = "blue", 
     xlab = "Week", ylab = "Interest", 
     main = "Google Trends: Trump, Harris, Election",
     ylim = c(0, max(c(df$trump, df$harris, df$election), na.rm = TRUE)))
lines(df$week, df$harris, col = "red")
lines(df$week, df$election, col = "green")
legend("topright", 
       legend = c("Trump", "Harris", "Election"), 
       col = c("blue", "red", "green"), 
       lty = 1)
```

## Assignment Questions

### 1. Data Dates and Interval

The data is collected at **weekly intervals**. This is evident from the x-axis of the plot, which shows weekly increments (e.g., spanning 2021 to 2025 with distinct weekly data points). The CSV file (multiTimeline.csv) also lists data by "Week" (e.g., 2020-09-13, 2020-09-20), confirming that each row represents one week of interest scores for "Donald Trump," "Kamala Harris," and "election" in the United States.

### 2. Difference Between the Two Methods

**Website Method**: Provides data as a pre-processed CSV (e.g., multiTimeline.csv) where search terms are interpreted as topics. When you download data from Google Trends website, it automatically groups related searches and gives you topic-level data.

**gtrendsR Method**: Fetches data programmatically, treating inputs as exact keywords. The R package gives you more control over the exact search terms and allows for automated data collection, but may interpret terms more literally rather than as broader topics.

## Additional Analysis

```{r additional-analysis}
#| echo: true
#| eval: false

# Example: Tariff, China military, Taiwan
plot(gtrends(c("tariff"), time = "all"))
plot(gtrends(c("tariff"), geo = "GB", time = "all"))
plot(gtrends(c("tariff"), geo = c("US", "GB", "TW"), time = "all"))

# Store results
tg_lot <- gtrends(c("tariff"), time = "all")
tc <- gtrends(c("tariff", "China military", "Taiwan"), time = "all")
tc_df <- data.frame(tc$interest_over_time)
plot(gtrends(c("tariff", "China military", "Taiwan"), time = "all"))
```

## Data Export

```{r export}
#| echo: true
#| output: false

# Save processed data
write.csv(df, "multiTimeline_analyzed.csv", row.names = FALSE)
saveRDS(df, "multiTimeline_analyzed.rds")
```

*Note: Processed data saved to `multiTimeline_analyzed.csv` and `multiTimeline_analyzed.rds`*
